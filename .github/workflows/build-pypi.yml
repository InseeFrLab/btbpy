# name: Build Python package (Pypy style)
# 
# on: [push]
# 
# # on:
# #    push:
# #      tags:
# #        - 'v*'
# 
# 
# 
#      
# jobs:
# #  build:
# #    name: Build wheels on ${{ matrix.os }} (Python ${{ matrix.python-version }})
# #    runs-on: ${{ matrix.os }}
# #    strategy:
# #      fail-fast: false
# #      matrix:
# #        os: [ubuntu-20.04, windows-2019, macos-latest]
# #        python-version: [3.5, 3.6, 3.7, 3.8]
# #    steps:
# #      - uses: actions/checkout@v2
# #
# #      # Used to host cibuildwheel
# #      - uses: actions/setup-python@v2
# #        with:
# #          python-version: ${{ matrix.python-version }}
# #
# #      - name: Install Visual C++ for Python 2.7
# #        if: runner.os == 'Windows'
# #        run: choco install vcpython27 -f -y
# #      # Install pip and pytest
# #      - name: Install dependencies
# #        run: |
# #          python -m pip install --upgrade pip
# #          pip install -r requirements.txt
# #          pip install setuptools wheel twine
# #      - name: Install additional dependencies for windows
# #        if: runner.os == 'Windows'
# #        run: |
# #          python -m pip install pyproj
# #      - name: Cache pip
# #        uses: actions/cache@v2
# #        with:
# #          # This path is specific to Ubuntu
# #          path: ~/.cache/pip
# #          # Look to see if there is a cache hit for the corresponding requirements file
# #          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
# #          restore-keys: |
# #            ${{ runner.os }}-pip-
# #            ${{ runner.os }}-        
# #      - name: Build a binary wheel and a source tarball
# #        run: |
# #          python setup.py sdist bdist_wheel --dist-dir wheelhouse
# #      - name: Get wheel as artifact
# #        uses: actions/upload-artifact@v2
# #        with:
# #          path: ./wheelhouse/*.whl
# #    - name: Test with pytest
# #      run: pytest tests.py --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}.xml
# #    - name: Upload pytest test results
# #      uses: actions/upload-artifact@v2
# #      with:
# #        name: pytest-results-${{ matrix.python-version }}
# #        path: junit/test-results-${{ matrix.python-version }}.xml
# #      # Use always() to always run this step to publish test results when there are test failures
# #      if: ${{ always() }}
# 
#   build_wheels:
#     name: Build wheels on ${{ matrix.os }} (Python ${{ matrix.python-version }})
#     runs-on: ${{ matrix.os }}
#     strategy:
#       fail-fast: false
#       matrix:
# #        os: [ubuntu-20.04, windows-2019, macos-latest]
# #        python-version: [3.5, 3.6, 3.7, 3.8]
#         os: [ubuntu-20.04]
#         python-version: [3.5]
# 
#     steps:
#       - uses: actions/checkout@v2
# 
#       # Used to host cibuildwheel
#       - uses: actions/setup-python@v2
#         with:
#           python-version: ${{ matrix.python-version }}
# 
#       - name: Install Visual C++ for Python 2.7
#         if: runner.os == 'Windows'
#         run: choco install vcpython27 -f -y
# 
#       - name: Install requirements
# #        if: (runner.os != 'macOS') & (${{ matrix.python-version }} != 2.7)
#         run: |
#           python -m pip install --upgrade pip
#           python -m pip install -r requirements.txt
#           python -m pip install cibuildwheel
#           python -m pip install --upgrade Cython
# 
#       - name: Build wheels
#         run: python -m cibuildwheel --output-dir wheelhouse
#         env:
#           CIBW_MANYLINUX_X86_64_IMAGE: manylinux1
#           CIBW_MANYLINUX_I686_IMAGE: manylinux1
#           CIBW_BEFORE_BUILD: pip install -r requirements.txt
#           MPL_DISABLE_FH4: "yes"
# 
#       - uses: actions/upload-artifact@v2
#         with:
#           path: ./wheelhouse/*.whl
# 
#   build_sdist:
#     name: Build source distribution
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         python-version: [3.5, 3.6, 3.7, 3.8]
#     steps:
#       - uses: actions/checkout@v2
# 
#       - uses: actions/setup-python@v2
#         name: Install Python
#         with:
#           python-version: ${{ matrix.python-version }}
# 
#       - name: Install cibuildwheel
#         run: |
#           python -m pip install --upgrade pip
#           python -m pip install -r requirements.txt
#           python -m pip install cibuildwheel
#           pip install --upgrade cython
# 
#       - name: Build sdist
#         run: python setup.py sdist
# 
#       - uses: actions/upload-artifact@v2
#         with:
#           path: dist/*.tar.gz
# 
# 
